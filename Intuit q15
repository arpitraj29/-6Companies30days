question link :- https://leetcode.com/problems/koko-eating-bananas/

code:- class Solution {
public:
    bool isp(vector<int>& p, int h , int mid){
        int c = 0;
        for(int i=0;i<p.size();i++){
            c += (p[i]/mid);
            if(p[i]%mid != 0) c=c+1;
        }
        return (c<=h);
    }
    int minEatingSpeed(vector<int>& p, int h) {
        int low=1;
        int high=0;
        for(int i=0;i<p.size();i++){
            high = max(high,p[i]);
        }
        int ans = high;
        while(low<=high){
            int mid = low + ((high-low)/2);
            if(isp(p,h,mid)){
                high = mid - 1;
                ans = mid;
            }
            else{
                low = mid+1;
            }
        }
        return ans;
    }
};
