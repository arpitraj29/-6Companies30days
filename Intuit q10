question link:- https://leetcode.com/problems/number-of-provinces/

code:- 
      class Solution {
public:
    void dfs(int i,vector<int>&vis,vector<vector<int>>&arr){
        vis[i]=1;
        for(auto j:arr[i]){
            if(vis[j]==0){
                dfs(j,vis,arr);
            }
        }
        return ;
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n=isConnected.size();
        int m = isConnected[0].size();
        vector<vector<int>>arr(n);
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(isConnected[i][j]==1){
                    arr[i].push_back(j);
                    arr[j].push_back(i);
                }
            }
        }
        int c=0;
        vector<int>vis(n,0);
        for(int i=0;i<n;i++){
           if(!vis[i]){
               c++;
               dfs(i,vis,arr);
           }
        }
        return c;
    }
};
